{
    "locales": {
        "en": {
            "title": "Portfolio",
            "title_long_prefix": "Take a look at",
            "title_long": "My **Portfolio**"
        }
    },

    "articles": [
        {
            "id": "portfolio",
            "component": "ArticlePortfolio",
            "config": {},
            "locales": {},

            "categories": [
                {
                    "id": "data",
                    "locales": {
                        "en": {"singular": "Data", "plural": "Data"}
                    }
                },
                {
                    "id": "ai",
                    "locales": {
                        "en": {"singular": "AI", "plural": "AI"}
                    }
                },
                {
                    "id": "blog",
                    "locales": {
                        "en": {"singular": "Blog", "plural": "Blogs"}
                    }
                }
            ],

            "items": [
                {
                    "categoryId": "blog",
                    "icon": {
                        "img": "images/pictures/publication.png",
                        "fa": "",
                        "faColors": {"bg": "#FFFFFF", "fill": null}
                    },

                    "links": [
                        {"faIcon": "fa-solid fa-link", "href": "https://medium.com/@chimuanyachukwuma/designing-a-scalable-ticket-queueing-system-with-kafka-from-requirements-to-implementation-part-8ac8c9e7eed9"}
                    ],

                    "media": {
                        "youtubeVideo": null,
                        "screenshots": {
                            "aspectRatio": null,
                            "images": []
                        }
                    },

                    "locales": {
                        "en": {
                            "title": "Ticket Queueing System: Requirement Gathering",
                            "text": "Extracting clear system requirements for buidling a scalable ticket-queueing application using Kafka.",
                            "tags": ["System Requirements", "Product Design", "Data Engineering"]
                        }
                    }
                },

                {
                    "categoryId": "blog",
                    "icon": {
                        "img": "images/pictures/publication.png",
                        "fa": "",
                        "faColors": {"bg": "#FFFFFF", "fill": null}
                    },

                    "links": [
                        {"faIcon": "fa-solid fa-link", "href": "https://medium.com/@chimuanyachukwuma/designing-a-scalable-ticket-queueing-system-with-kafka-from-requirements-to-implementation-part-da32715d3915"}
                    ],

                    "media": {
                        "youtubeVideo": null,
                        "screenshots": {
                            "aspectRatio": null,
                            "images": []
                        }
                    },

                    "locales": {
                        "en": {
                            "title": "Ticket Queueing System: System Design",
                            "text": "Translating a ticket queueing system requirements into a concrete system design using Apache Kafka as the backbone of the event-driven architecture",
                            "tags": ["Kafka", "Message Queues", "AWS"]
                        }
                    }
                },

                {
                    "categoryId": "blog",
                    "icon": {
                        "img": "images/pictures/publication.png",
                        "fa": "",
                        "faColors": {"bg": "#FFFFFF", "fill": null}
                    },

                    "links": [
                        {"faIcon": "fa-solid fa-link", "href": "https://medium.com/@chimuanyachukwuma/system-design-real-time-clickstream-analytics-53a191e60b86"}
                    ],

                    "media": {
                        "youtubeVideo": null,
                        "screenshots": {
                            "aspectRatio": null,
                            "images": []
                        }
                    },

                    "locales": {
                        "en": {
                            "title": "Real-Time Clickstream Analytics",
                            "text": " Designing a real-time clickstream analytics system to track user interactions on an e-commerce platform.",
                            "tags": ["Kafka", "Flink", "AWS", "CLickstream", "System design"]
                        }
                    }
                },

                {
                    "categoryId": "ai",
                    "icon": {
                        "img": null,
                        "fa": "fa-solid fa-cart-flatbed",
                        "faColors": {"bg": null, "fill": null}
                    },

                    "links": [
                        {"faIcon": "fa-brands fa-github", "href": "https://github.com/yin-ye/weed-robot/tree/master"}
                    ],

                    "media": {
                        "youtubeVideo": null,
                        "screenshots": {
                            "aspectRatio": null,
                            "images": []
                        }
                    },

                    "locales": {
                        "en": {
                            "title": "Thorvald Weed Robot",
                            "text": "A weeding robot built with rospy and simulated on Gazebo with YOLO-based object tracking features.",
                            "tags": ["YOLO", "Gazebo", "Simulation"]
                        }
                    }
                },

                {
                    "categoryId": "data",
                    "icon": {
                        "img": "images/pictures/tableau.png",
                        "fa": "",
                        "faColors": {"bg": "#FFFFFF", "fill": null}
                    },

                    "links": [
                        {"faIcon": "fa-solid fa-link", "href": "https://public.tableau.com/app/profile/onyinyechi.chukwuma/viz/sales_dashboard_17359902810340/SalesDashboard"}
                    ],

                    "media": {
                        "youtubeVideo": null,
                        "screenshots": {
                            "aspectRatio": null,
                            "images": []
                        }
                    },

                    "locales": {
                        "en": {
                            "title": "Sales Dashboard",
                            "text": "An interactive sales dashboard built with <b>Tableau</b> displaying insights into sales, profit and quantity KPIs. This dashboard also shows sales and profit metrics by subcaterogy and trends over a period of 4 years.",
                            "tags": ["Analytics", "Tableau", "SQL"]
                        }
                    }
                },

                {
                    "categoryId": "ai",
                    "icon": {
                        "img": "images/pictures/vision.png",
                        "fa": "",
                        "faColors": {"bg": "#FFFFFF", "fill": null}
                    },

                    "links": [
                        {"faIcon": "fa-brands fa-github", "href": "https://github.com/yin-ye/vision"}
                    ],

                    "media": {
                        "youtubeVideo": null,
                        "screenshots": {
                            "aspectRatio": null,
                            "images": []
                        }
                    },

                    "locales": {
                        "en": {
                            "title": "Computer Vision",
                            "text": "Compilation of computer vision projects using deep learning: AI Trainer, Blog Segmentation, Gesture Volume Control, etc.",
                            "tags": ["YOLO", "CNN", "Object Detection"]
                        }
                    }
                },

                {
                    "categoryId": "data",
                    "icon": {
                        "img": null,
                        "fa": "fa-solid fa-car",
                        "faColors": {"bg": null, "fill": null}
                    },

                    "links": [
                        {"faIcon": "fa-brands fa-github", "href": "https://github.com/yin-ye/smart_car_streaming"}
                    ],

                    "media": {
                        "youtubeVideo": null,
                        "screenshots": {
                            "aspectRatio": null,
                            "images": []
                        }
                    },

                    "locales": {
                        "en": {
                            "title": "Smart Car Streaming",
                            "text": "This project provides a containerized real-time data streaming pipeline to track and monitor the status of a car traveling from Lagos to Abuja. This pipeline leverages distributed data processing and cloud technologies such as Apache Kafka, Zookeeper, Apache Spark, Docker, and AWS services (Athena and Glue).",
                            "tags": ["AWS", "Streaming", "Kafka", "Spark", "Docker"]
                        }
                    }
                },

                {
                    "categoryId": "data",
                    "icon": {
                        "img": "images/pictures/reddit.png",
                        "fa": "",
                        "faColors": {"bg": "#FFFFFF", "fill": "#EEE"}
                    },

                    "links": [
                        {"faIcon": "fa-brands fa-github", "href": "https://github.com/yin-ye/reddit_etl_pipeline"}
                    ],

                    "media": {
                        "youtubeVideo": "",
                        "screenshots": {
                            "aspectRatio": null,
                            "images": []
                        }
                    },

                    "locales": {
                        "en": {
                            "title": "Reddit ETL Pipeling",
                            "text": "This project provides a containerized data pipeline solution to extract OnePiece subreddit posts using Reddit API, transform to valuable metrics, and load them into a Redshift data warehouse. The pipeline leverages Apache Airflow, Celery, PostgreSQL, Amazon S3, AWS Glue, Amazon Athena, and Amazon Redshift.",
                            "tags": ["RedShift", "Reddit", "Airflow", "OnePiece"]
                        }
                    }
                },

                {
                    "categoryId": "blog",
                    "icon": {
                        "img": "images/pictures/publication.png",
                        "fa": "",
                        "faColors": {"bg": "#FFFFFF", "fill": null}
                    },

                    "links": [
                        {"faIcon": "fa-solid fa-link", "href": "https://medium.com/@chimuanyachukwuma/designing-a-scalable-ticket-queueing-system-with-kafka-from-requirements-to-implementation-part-a429528c21ce"}
                    ],

                    "media": {
                        "youtubeVideo": null,
                        "screenshots": {
                            "aspectRatio": null,
                            "images": []
                        }
                    },

                    "locales": {
                        "en": {
                            "title": "Ticket Queueing System: Implementation",
                            "text": "Implementation a ticket queueing system using Python, Confluent and Kafka.",
                            "tags": ["Python", "Confluent", "Kafka"]
                        }
                    }
                },

                {
                    "categoryId": "ai",
                    "icon": {
                        "img": "images/pictures/chatbot.png",
                        "fa": "",
                        "faColors": {"bg": "#FFFFFF", "fill": null}
                    },

                    "links": [
                        {"faIcon": "fa-brands fa-github", "href": "https://github.com/yin-ye/seq2seq_chatbot"}
                    ],

                    "media": {
                        "youtubeVideo": null,
                        "screenshots": {
                            "aspectRatio": null,
                            "images": []
                        }
                    },

                    "locales": {
                        "en": {
                            "title": "Chatbot",
                            "text": "Implements to sequence to sequence chatbot learning using Encoder-Decoder and Long Short Term Memory (LSTM) architectures.",
                            "tags": ["LTSM", "Chatbot", "TensorFlow"]
                        }
                    }
                }
            ]
        }
    ]
}